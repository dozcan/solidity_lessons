pragma solidity ^0.7.6;

contract first {
    uint age;
    uint result;
    address public linkedContract;

    function calculate(uint a, uint b) public {
        result = a * b;
    }
}


contract second {
     uint public calculationResult1;
     uint public calculationResult2;
     address public linkedContract;

    function changeContract(address newContract) public {
        linkedContract = newContract;
    }

  function delegatedCalculation(uint firstNumber, uint secondNumber) public {
        
       (bool status, ) = linkedContract.delegatecall(abi.encodeWithSignature("calculate(uint256,uint256)",firstNumber,secondNumber));
        //(bool status,) = linkedContract.delegatecall(abi.encodePacked(bytes4(keccak256("calculate(uint256,uint256)")), a, b));
        
    }
}
