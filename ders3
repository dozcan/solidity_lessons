object oriented factory pattern solidity


pragma solidity ^0.4.18;


interface IEateble {
    function getName() public returns (string);
}


pragma solidity ^0.4.18;

import './IEtable.sol';

contract abstractFactory {

    function createEtableObject(uint _type) public returns (IEateble ){
        IEateble ob;
        
          if(_type == 1)
             ob = new Fruit();
          else
             ob = new Vegetable();
             
      return ob;
    }
}

contract Fruit is IEateble {
    function getName() public returns (string) {
        return "Fruit";
    }
   
}

contract Vegetable is IEateble {
      function getName() public returns (string) {
        return "Vegetable";
    }
}

